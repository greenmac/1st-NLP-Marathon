．set.union(set1, set2...)
https://www.runoob.com/python3/ref-set-union.html
x = {"a", "b", "c"}
y = {"f", "d", "a"}
z = {"c", "d", "e"}
result = x.union(y, z)
print(result)
=>{'c', 'd', 'f', 'e', 'b', 'a'}

．dict.fromkeys(seq[, value]))
https://www.runoob.com/python/att-dictionary-fromkeys.html
seq = ('Google', 'Runoob', 'Taobao')
dict = dict.fromkeys(seq)
print("New Dictionary : %s" %  str(dict))
dict = dict.fromkeys(seq, 10)
print("New Dictionary : %s" %  str(dict))
=>New Dictionary : {'Google': None, 'Taobao': None, 'Runoob': None}
=>New Dictionary : {'Google': 10, 'Taobao': 10, 'Runoob': 10}

．numpy.sqrt(arr, out=None) - 平方根
https://www.delftstack.com/zh-tw/api/numpy/python-numpy-sqrt/
import numpy as np
arr = [1, 9, 25, 49]
arr_sqrt = np.sqrt(arr)
print(arr_sqrt)
=>[1, 3, 5, 7]

．np.dot()
https://blog.csdn.net/zenghaitao0128/article/details/78715140
对于秩为1的数组，执行对应位置相乘，然后再相加；
对于秩不为1的二维数组，执行矩阵乘法运算；超过二维的可以参考numpy库介绍

．npsklearn.decomposition.PCA参数介绍(svd.explained_variance_ratio_)
https://www.cnblogs.com/pinard/p/6243025.html
除了这些输入参数外，有两个PCA类的成员值得关注。
第一个是explained_variance_，它代表降维后的各主成分的方差值。
方差值越大，则说明越是重要的主成分。
第二个是explained_variance_ratio_，它代表降维后的各主成分的方差值占总方差值的比例，这个比例越大，则越是重要的主成分。

．numpy.delete
https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/358343/
1.刪除一列
dataset=[[1,2,3],[2,3,4],[4,5,6]]
import numpy as np
dataset = np.delete(dataset, -1, axis=1)
print(dataset)
=>array([[1, 2], 
    [2, 3], 
    [4, 5]])
2.刪除多列
arr = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]]) 
dataset = np.delete(arr, [1,2], axis=1)
print(dataset)
=>array([[ 1, 4], 
    [ 5, 8], 
    [ 9, 12]]) 